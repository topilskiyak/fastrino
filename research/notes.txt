==== 1608.03981v1_Residual_Learning_DeepCnn_Image_Denoising
Main ideas: DnCNN (https://github.com/cszn/DnCNN)
! predict noise (RI=Residual Image)
- Conv, Relu, BN, "Rescon"^, noPool
- set depth by desired receptive field size
- Blind Gaussian Denoising: all noise levels at once
- single model for 3 tasks: DN, SISR, JPEG Deblocking
Ablation: BN, RI is good
Comparison: SOTA/nearSOTA PSNR&SSIM + better visual quality
== EXTRA
- BN vs noBN > SGD vs Adam
- Full train/eval setup
Datasets Train: BSD68
Datasets Test: 
- DN: BSD68,12testimg
- SISR: Set5,Set14,BSD100,Urban100
- JPEG: Classic5,LIVE1
VisualQuality: sharp edges, fine details, good smooth regions, natural colour
====

==== 1812.10477v1_Residual_Dense_Networks_Image_Restoration
Main ideas: RDN (https://github.com/yulunzhang/RDN)
- Conv, Relu, Concat, Rescon is all you need (no BN, Pool)
- resconnect and concant as much as possible
- RDN(DN)=LQ>Conv(F-1)>RDB>...>RDB(FD)=>ConcatConv1x1>Conv>Res[+F-1]>Conv>Res[+LQ]
- RDB=Input>ConvRelu>...>ConvRelu=>ConcatConv1x1>Res[+Input]
- LFF=Concat+Conv1x1 for train stabilization instead of BN
- SR features from LR instead of upscaled HR
- (losses) L1 > L2
Ablation: everything (CM, LRL, GFF) is good.
Comparisons on SR, DN, CAR: new SOTA PSNR&SSIM (BI2x-8x,Set5,Set14,etc), improvements visually.
Less parameters than SOTAs, faster inference.
Pretty impressive SR - sharper images, more detail. "Jointly denoise and SR"
====

